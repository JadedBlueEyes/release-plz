"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[446],{2474:(e,l,i)=>{i.r(l),i.d(l,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var c=i(5893),n=i(1151);const s={},d="Configuration",r={id:"config",title:"Configuration",description:"This section describes how you can customize the behavior of release-plz",source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/docs/config",draft:!1,unlisted:!1,editUrl:"https://github.com/MarcoIeni/release-plz/tree/main/website/docs/config.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Changelog format",permalink:"/docs/changelog-format"},next:{title:"Semver check",permalink:"/docs/semver-check"}},a={},h=[{value:"Example",id:"example",level:2},{value:"Reference",id:"reference",level:2},{value:"The <code>[workspace]</code> section",id:"the-workspace-section",level:3},{value:"The <code>allow_dirty</code> field",id:"the-allow_dirty-field",level:4},{value:"The <code>changelog_config</code> field",id:"the-changelog_config-field",level:4},{value:"The <code>changelog_update</code> field",id:"the-changelog_update-field",level:4},{value:"The <code>dependencies_update</code> field",id:"the-dependencies_update-field",level:4},{value:"The <code>git_release_enable</code> field",id:"the-git_release_enable-field",level:4},{value:"The <code>git_release_draft</code> field",id:"the-git_release_draft-field",level:4},{value:"The <code>git_tag_enable</code> field",id:"the-git_tag_enable-field",level:4},{value:"The <code>pr_draft</code> field",id:"the-pr_draft-field",level:4},{value:"The <code>pr_labels</code> field",id:"the-pr_labels-field",level:4},{value:"The <code>publish</code> field",id:"the-publish-field",level:4},{value:"The <code>publish_allow_dirty</code> field",id:"the-publish_allow_dirty-field",level:4},{value:"The <code>publish_no_verify</code> field",id:"the-publish_no_verify-field",level:4},{value:"The <code>publish_timeout</code> field",id:"the-publish_timeout-field",level:4},{value:"The <code>repo_url</code> field",id:"the-repo_url-field",level:4},{value:"The <code>semver_check</code> field",id:"the-semver_check-field",level:4},{value:"The <code>[[package]]</code> section",id:"the-package-section",level:3},{value:"The <code>name</code> field",id:"the-name-field",level:4},{value:"The <code>changelog_include</code> field",id:"the-changelog_include-field",level:4},{value:"The <code>changelog_path</code> field (<code>package</code> section)",id:"the-changelog_path-field-package-section",level:4},{value:"The <code>changelog_update</code> field (<code>package</code> section)",id:"the-changelog_update-field-package-section",level:4},{value:"The <code>git_release_enable</code> field (<code>package</code> section)",id:"the-git_release_enable-field-package-section",level:4},{value:"The <code>git_release_draft</code> field (<code>package</code> section)",id:"the-git_release_draft-field-package-section",level:4},{value:"The <code>git_tag_enable</code> field (<code>package</code> section)",id:"the-git_tag_enable-field-package-section",level:4},{value:"The <code>publish</code> field (<code>package</code> section)",id:"the-publish-field-package-section",level:4},{value:"The <code>publish_allow_dirty</code> field (<code>package</code> section)",id:"the-publish_allow_dirty-field-package-section",level:4},{value:"The <code>publish_no_verify</code> field (<code>package</code> section)",id:"the-publish_no_verify-field-package-section",level:4},{value:"The <code>semver_check</code> field (<code>package</code> section)",id:"the-semver_check-field-package-section",level:4}];function t(e){const l={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(l.h1,{id:"configuration",children:"Configuration"}),"\n",(0,c.jsxs)(l.p,{children:["This section describes how you can customize the behavior of release-plz\nwith the ",(0,c.jsx)(l.code,{children:"release-plz.toml"})," file."]}),"\n",(0,c.jsx)(l.p,{children:"This configuration file is optional \u2014 release-plz is designed to work out of the box,\nwith decent defaults."}),"\n",(0,c.jsxs)(l.p,{children:["Put your ",(0,c.jsx)(l.code,{children:"release-plz.toml"})," (or ",(0,c.jsx)(l.code,{children:".release-plz.toml"}),") file in the same directory of your root ",(0,c.jsx)(l.code,{children:"Cargo.toml"}),"."]}),"\n",(0,c.jsx)(l.h2,{id:"example",children:"Example"}),"\n",(0,c.jsxs)(l.p,{children:["Here's an example configuration file for a cargo workspace.\n",(0,c.jsx)(l.code,{children:"package_a"})," and ",(0,c.jsx)(l.code,{children:"package_b"})," override some fields from the default configuration ",(0,c.jsx)(l.code,{children:"[workspace]"}),",\nwhile the other packages inherit the default configuration."]}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-toml",children:'[workspace]\nallow_dirty = true # allow updating repositories with uncommitted changes\nchangelog_config = "config/git-cliff.toml" # use a custom git-cliff configuration\nchangelog_update = false # disable changelog updates\ndependencies_update = true # update dependencies with `cargo update`\ngit_release_enable = false # disable GitHub/Gitea releases\npr_labels = ["release"] # add the `release` label to the release Pull Request\npublish_allow_dirty = true # add `--allow-dirty` to `cargo publish`\nsemver_check = false # disable API breaking changes checks\npublish_timeout = "10m" # set a timeout for `cargo publish`\n\n[[package]] # the double square brackets define a TOML table array\nname = "package_a"\nchangelog_include = ["package_b"] # include commits from `package_b` in the changelog\nchangelog_path = "docs/CHANGELOG.md" # use a custom changelog path for `package_a`\nchangelog_update = true # enable changelog update for `package_a`\ngit_release_enable = true # enable GitHub/Gitea releases for `package_a`\npublish = false # disable `cargo publish` for `package_a`\n\n[[package]]\nname = "package_b"\nsemver_check = true # enable semver_check for `package_b`\npublish_no_verify = true # add `--no-verify` to `cargo publish` for `package_b`\n'})}),"\n",(0,c.jsx)(l.h2,{id:"reference",children:"Reference"}),"\n",(0,c.jsxs)(l.p,{children:["The configuration file is written in the ",(0,c.jsx)(l.a,{href:"https://toml.io/",children:"TOML"})," format and consists of\nthe following sections:"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-workspace-section",children:(0,c.jsx)(l.code,{children:"[workspace]"})})," \u2014 Default configuration.","\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-allow_dirty-field",children:(0,c.jsx)(l.code,{children:"allow_dirty"})})," \u2014 Update dirty working directories."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-changelog_config-field",children:(0,c.jsx)(l.code,{children:"changelog_config"})})," \u2014 Path to the ",(0,c.jsx)(l.a,{href:"https://git-cliff.org",children:"git-cliff"})," configuration file."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-changelog_update-field",children:(0,c.jsx)(l.code,{children:"changelog_update"})})," \u2014 Update changelog."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-dependencies_update-field",children:(0,c.jsx)(l.code,{children:"dependencies_update"})})," \u2014 Update all dependencies."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-git_release_enable-field",children:(0,c.jsx)(l.code,{children:"git_release_enable"})})," \u2014 Enable git release."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-git_release_draft-field",children:(0,c.jsx)(l.code,{children:"git_release_draft"})})," \u2014 Publish git release as draft."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-git_tag_enable-field",children:(0,c.jsx)(l.code,{children:"git_tag_enable"})})," \u2014 Enable git tag."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-pr_draft-field",children:(0,c.jsx)(l.code,{children:"pr_draft"})})," \u2014 Open the release Pull Request as a draft."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-pr_labels-field",children:(0,c.jsx)(l.code,{children:"pr_labels"})})," \u2014 Add labels to the release Pull Request."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish-field",children:(0,c.jsx)(l.code,{children:"publish"})})," \u2014 Publish to cargo registry."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish_allow_dirty-field",children:(0,c.jsx)(l.code,{children:"publish_allow_dirty"})})," \u2014 Package dirty directories."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish_no_verify-field",children:(0,c.jsx)(l.code,{children:"publish_no_verify"})})," \u2014 Don't verify package build."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish_timeout-field",children:(0,c.jsx)(l.code,{children:"publish_timeout"})})," \u2014 ",(0,c.jsx)(l.code,{children:"cargo publish"})," timeout."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-repo_url-field",children:(0,c.jsx)(l.code,{children:"repo_url"})})," \u2014 Repository URL."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-semver_check-field",children:(0,c.jsx)(l.code,{children:"semver_check"})})," \u2014 Run ",(0,c.jsx)(l.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"}),"."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-package-section",children:(0,c.jsx)(l.code,{children:"[[package]]"})})," \u2014 Package-specific configurations.","\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-name-field",children:(0,c.jsx)(l.code,{children:"name"})})," \u2014 Package name. ",(0,c.jsx)(l.em,{children:"(Required)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-changelog_include-field",children:(0,c.jsx)(l.code,{children:"changelog_include"})})," \u2014 Include commits from other packages."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-changelog_path-field-package-section",children:(0,c.jsx)(l.code,{children:"changelog_path"})})," \u2014 Changelog path."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-changelog_update-field-package-section",children:(0,c.jsx)(l.code,{children:"changelog_update"})})," \u2014 Update changelog."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-git_release_enable-field-package-section",children:(0,c.jsx)(l.code,{children:"git_release_enable"})})," \u2014 Enable git release."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-git_release_draft-field-package-section",children:(0,c.jsx)(l.code,{children:"git_release_draft"})})," \u2014 Publish git release as draft."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-git_tag_enable-field-package-section",children:(0,c.jsx)(l.code,{children:"git_tag_enable"})})," \u2014 Enable git tag."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish-field-package-section",children:(0,c.jsx)(l.code,{children:"publish"})})," \u2014 Publish to cargo registry."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish_allow_dirty-field-package-section",children:(0,c.jsx)(l.code,{children:"publish_allow_dirty"})})," \u2014 Package dirty directories."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-publish_no_verify-field-package-section",children:(0,c.jsx)(l.code,{children:"publish_no_verify"})})," \u2014 Don't verify package build."]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.a,{href:"#the-semver_check-field-package-section",children:(0,c.jsx)(l.code,{children:"semver_check"})})," \u2014 Run ",(0,c.jsx)(l.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"}),".\nDon't verify package build."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(l.h3,{id:"the-workspace-section",children:["The ",(0,c.jsx)(l.code,{children:"[workspace]"})," section"]}),"\n",(0,c.jsx)(l.p,{children:"Defines the global configuration, applied to all packages by default.\nThis section is optional, as well as all its fields."}),"\n",(0,c.jsx)(l.p,{children:"Here's an example configuration:"}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-toml",children:'[workspace]\nallow_dirty = true # allow updating repositories with uncommitted changes\nchangelog_config = "config/git-cliff.toml"\nchangelog_update = false\ndependencies_update = true # update dependencies with `cargo update`\ngit_release_enable = true\npublish_allow_dirty = true\npublish_no_verify = false\nrepo_url = "https://github.com/<owner>/<repo>"\nsemver_check = false\n'})}),"\n",(0,c.jsxs)(l.h4,{id:"the-allow_dirty-field",children:["The ",(0,c.jsx)(l.code,{children:"allow_dirty"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", allow release-plz to update dirty working directories.\nA directory is considered dirty if it contains uncommitted changes.\nThe uncommitted changes will be part of the update."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", release-plz returns an error if the repository contains uncommitted changes. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n"]}),"\n",(0,c.jsx)(l.admonition,{type:"caution",children:(0,c.jsxs)(l.p,{children:["This field is different from the ",(0,c.jsx)(l.code,{children:"allow-dirty"})," flag of the ",(0,c.jsx)(l.code,{children:"release-plz release"})," command.\nThis field only affects the ",(0,c.jsx)(l.code,{children:"release-plz update"})," and ",(0,c.jsx)(l.code,{children:"release-plz release-pr"})," command."]})}),"\n",(0,c.jsxs)(l.h4,{id:"the-changelog_config-field",children:["The ",(0,c.jsx)(l.code,{children:"changelog_config"})," field"]}),"\n",(0,c.jsxs)(l.p,{children:["Path to the ",(0,c.jsx)(l.a,{href:"https://git-cliff.org",children:"git-cliff"})," configuration file.\nIf unspecified, release-plz uses the ",(0,c.jsx)(l.a,{href:"https://keepachangelog.com/en/1.1.0/",children:"keep a changelog"})," format.\nYou can learn more in the ",(0,c.jsx)(l.a,{href:"/docs/changelog-format",children:"changelog format"})," section."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-changelog_update-field",children:["The ",(0,c.jsx)(l.code,{children:"changelog_update"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", update the changelog of the crates. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", don't update changelogs."]}),"\n"]}),"\n",(0,c.jsxs)(l.p,{children:["This field can be overridden in the ",(0,c.jsx)(l.a,{href:"#the-package-section",children:(0,c.jsx)(l.code,{children:"[package]"})})," section."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-dependencies_update-field",children:["The ",(0,c.jsx)(l.code,{children:"dependencies_update"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", update all the dependencies in the ",(0,c.jsx)(l.code,{children:"Cargo.lock"})," file by running ",(0,c.jsx)(l.code,{children:"cargo update"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", only update the workspace packages by running ",(0,c.jsx)(l.code,{children:"cargo update --workspace"}),". ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-git_release_enable-field",children:["The ",(0,c.jsx)(l.code,{children:"git_release_enable"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", release-plz creates a git release for the created tag. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", release-plz doesn't create a git release."]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"The supported git releases are:"}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsx)(l.li,{children:(0,c.jsx)(l.a,{href:"https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository",children:"GitHub"})}),"\n",(0,c.jsx)(l.li,{children:(0,c.jsx)(l.a,{href:"https://docs.gitea.io/en-us/",children:"Gitea"})}),"\n",(0,c.jsx)(l.li,{children:(0,c.jsx)(l.a,{href:"https://docs.gitlab.com/ee/user/project/releases/#releases",children:"GitLab"})}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-git_release_draft-field",children:["The ",(0,c.jsx)(l.code,{children:"git_release_draft"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", release-plz creates the git release as draft (unpublished)."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", release-plz publishes the created git release. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-git_tag_enable-field",children:["The ",(0,c.jsx)(l.code,{children:"git_tag_enable"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", release-plz creates a git tag for the new package version. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", release-plz doesn't create a git tag.\nNote: you can't create a git release without a git tag."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-pr_draft-field",children:["The ",(0,c.jsx)(l.code,{children:"pr_draft"})," field"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", release-plz creates the release PR as a draft."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", release-plz creates the release PR as ready for review. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-pr_labels-field",children:["The ",(0,c.jsx)(l.code,{children:"pr_labels"})," field"]}),"\n",(0,c.jsxs)(l.p,{children:["Add labels to the Pull Request opened by release-plz.\n",(0,c.jsx)(l.em,{children:"(GitHub only)"}),"."]}),"\n",(0,c.jsx)(l.p,{children:"Example:"}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-toml",children:'[workspace]\npr_labels = ["release"] # add the `release` label to the release Pull Request\n'})}),"\n",(0,c.jsxs)(l.p,{children:["By default, release-plz doesn't add any label.\nI.e. the ",(0,c.jsx)(l.code,{children:"pr_labels"})," array is empty."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish-field",children:["The ",(0,c.jsx)(l.code,{children:"publish"})," field"]}),"\n",(0,c.jsx)(l.p,{children:"Publish to cargo registry."}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", ",(0,c.jsx)(l.code,{children:"release-plz"})," runs ",(0,c.jsx)(l.code,{children:"cargo publish"}),". ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", ",(0,c.jsx)(l.code,{children:"release-plz"})," doesn't run ",(0,c.jsx)(l.code,{children:"cargo publish"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.p,{children:["With this option disabled, release-plz will continue creating git tags.\nHowever, note that release-plz will still use the cargo registry to check what's the latest\nrelease, so you still need to run ",(0,c.jsx)(l.code,{children:"cargo publish"})," by yourself."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish_allow_dirty-field",children:["The ",(0,c.jsx)(l.code,{children:"publish_allow_dirty"})," field"]}),"\n",(0,c.jsx)(l.p,{children:"Allow dirty working directories to be packaged."}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", ",(0,c.jsx)(l.code,{children:"release-plz"})," adds the ",(0,c.jsx)(l.code,{children:"--allow-dirty"})," flag to ",(0,c.jsx)(l.code,{children:"cargo publish"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", ",(0,c.jsx)(l.code,{children:"cargo publish"})," fails if your repository contains uncommitted changes. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish_no_verify-field",children:["The ",(0,c.jsx)(l.code,{children:"publish_no_verify"})," field"]}),"\n",(0,c.jsx)(l.p,{children:"Don't verify the contents by building them."}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", ",(0,c.jsx)(l.code,{children:"release-plz"})," adds the ",(0,c.jsx)(l.code,{children:"--no-verify"})," flag to ",(0,c.jsx)(l.code,{children:"cargo publish"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", ",(0,c.jsx)(l.code,{children:"cargo publish"})," fails if your repository doesn't build. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish_timeout-field",children:["The ",(0,c.jsx)(l.code,{children:"publish_timeout"})," field"]}),"\n",(0,c.jsx)(l.p,{children:"The timeout used when:"}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["publishing a crate, i.e. ",(0,c.jsx)(l.code,{children:"cargo publish"}),"."]}),"\n",(0,c.jsx)(l.li,{children:"checking if a crate is published."}),"\n"]}),"\n",(0,c.jsxs)(l.p,{children:["It's a string in the format ",(0,c.jsx)(l.code,{children:"<duration><unit>"}),". E.g.:"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.code,{children:"30s"})," \u2014 30 seconds"]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.code,{children:"10m"})," \u2014 10 minutes"]}),"\n",(0,c.jsxs)(l.li,{children:[(0,c.jsx)(l.code,{children:"1h"})," \u2014 1 hour"]}),"\n"]}),"\n",(0,c.jsx)(l.p,{children:"Example:"}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-toml",children:'[workspace]\npublish_timeout = "10m"\n'})}),"\n",(0,c.jsxs)(l.p,{children:["By default, this timeout is set to ",(0,c.jsx)(l.code,{children:"30m"}),"."]}),"\n",(0,c.jsx)(l.p,{children:"This timeout is useful when there are some problems regarding the cargo\nregistry or local configuration, allowing to:"}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsx)(l.li,{children:"avoid CI job to run forever."}),"\n",(0,c.jsx)(l.li,{children:"have a more precise error message."}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-repo_url-field",children:["The ",(0,c.jsx)(l.code,{children:"repo_url"})," field"]}),"\n",(0,c.jsx)(l.p,{children:"GitHub/Gitea repository URL where your project is hosted.\nIt is used to generate the changelog release link and open the PR.\nNormally, you don't need to set this field,\nbecause release-plz defaults to the URL of the default git remote."}),"\n",(0,c.jsxs)(l.h4,{id:"the-semver_check-field",children:["The ",(0,c.jsx)(l.code,{children:"semver_check"})," field"]}),"\n",(0,c.jsxs)(l.p,{children:["With this field, you can tell release-plz to run ",(0,c.jsx)(l.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"})," to check\nAPI breaking changes of your package:"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", run it. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", don't run it."]}),"\n"]}),"\n",(0,c.jsxs)(l.p,{children:["Note that ",(0,c.jsx)(l.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"})," only works with packages containing a library."]}),"\n",(0,c.jsxs)(l.p,{children:["This field can be overridden in the ",(0,c.jsx)(l.a,{href:"#the-package-section",children:(0,c.jsx)(l.code,{children:"[package]"})})," section."]}),"\n",(0,c.jsxs)(l.h3,{id:"the-package-section",children:["The ",(0,c.jsx)(l.code,{children:"[[package]]"})," section"]}),"\n",(0,c.jsxs)(l.p,{children:["In this section, you can override some of the ",(0,c.jsx)(l.code,{children:"workspace"})," fields for specific packages."]}),"\n",(0,c.jsxs)(l.p,{children:["Here's an example configuration where we override the configuration of the ",(0,c.jsx)(l.code,{children:"my_package"})," package:"]}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-toml",children:'[[package]]\nname = "my_package"\nchangelog_path = "docs/CHANGELOG.md"\nsemver_check = false\nchangelog_update = false\ngit_release_enable = true\npublish = true\npublish_allow_dirty = true\npublish_no_verify = true\n'})}),"\n",(0,c.jsxs)(l.h4,{id:"the-name-field",children:["The ",(0,c.jsx)(l.code,{children:"name"})," field"]}),"\n",(0,c.jsxs)(l.p,{children:["Name of the package to which the configuration applies.\n",(0,c.jsx)(l.em,{children:"(Required field)"}),"."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-changelog_include-field",children:["The ",(0,c.jsx)(l.code,{children:"changelog_include"})," field"]}),"\n",(0,c.jsxs)(l.p,{children:["By default, release-plz populates the changelog of a package with commits\ncontaining changes in files of the package directory.\nYou can use the ",(0,c.jsx)(l.code,{children:"changelog_include"})," field to include commits that belong to other packages.\nFor example, the changelog of the ",(0,c.jsx)(l.code,{children:"release-plz"})," package of this repository\nincludes commits of the ",(0,c.jsx)(l.code,{children:"release_plz_core"})," package, because they affect the\n",(0,c.jsx)(l.code,{children:"release-plz"})," package, too."]}),"\n",(0,c.jsx)(l.p,{children:"Example:"}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-toml",children:'changelog_include = ["release_plz_core"]\n'})}),"\n",(0,c.jsxs)(l.h4,{id:"the-changelog_path-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"changelog_path"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["By default, release-plz looks for the changelog in the ",(0,c.jsx)(l.code,{children:"CHANGELOG.md"})," file\nof the same directory of the ",(0,c.jsx)(l.code,{children:"Cargo.toml"})," of the package:"]}),"\n",(0,c.jsx)(l.pre,{children:(0,c.jsx)(l.code,{className:"language-txt",children:".\n\u251c\u2500\u2500 src/\n\u251c\u2500\u2500 CHANGELOG.md\n\u2514\u2500\u2500 Cargo.toml\n"})}),"\n",(0,c.jsx)(l.p,{children:"If the changelog of a package is in a different location, you can specify it with this field."}),"\n",(0,c.jsxs)(l.p,{children:["This field is relative to the root ",(0,c.jsx)(l.code,{children:"Cargo.toml"})," file.\nIn GitHub Actions, this is the root of the repository."]}),"\n",(0,c.jsxs)(l.p,{children:["This field cannot be set in the ",(0,c.jsx)(l.code,{children:"[workspace]"})," section."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-changelog_update-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"changelog_update"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", update the changelog of this package. ",(0,c.jsx)(l.em,{children:"(Default)"}),"."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", don't."]}),"\n"]}),"\n",(0,c.jsxs)(l.h4,{id:"the-git_release_enable-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"git_release_enable"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["Overrides the ",(0,c.jsx)(l.a,{href:"#the-git_release_enable-field",children:(0,c.jsx)(l.code,{children:"workspace.git_release_enable"})})," field."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-git_release_draft-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"git_release_draft"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["Overrides the ",(0,c.jsx)(l.a,{href:"#the-git_release_draft-field",children:(0,c.jsx)(l.code,{children:"workspace.git_release_draft"})})," field."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-git_tag_enable-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"git_tag_enable"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["Overrides the ",(0,c.jsx)(l.a,{href:"#the-git_tag_enable-field",children:(0,c.jsx)(l.code,{children:"workspace.git_tag_enable"})})," field."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"publish"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["Overrides the ",(0,c.jsx)(l.a,{href:"#the-publish-field",children:(0,c.jsx)(l.code,{children:"workspace.publish"})})," field."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish_allow_dirty-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"publish_allow_dirty"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["Overrides the\n",(0,c.jsx)(l.a,{href:"#the-publish_allow_dirty-field",children:(0,c.jsx)(l.code,{children:"workspace.publish_allow_dirty"})})," field."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-publish_no_verify-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"publish_no_verify"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.p,{children:["Overrides the ",(0,c.jsx)(l.a,{href:"#the-publish_no_verify-field",children:(0,c.jsx)(l.code,{children:"workspace.publish_no_verify"})})," field."]}),"\n",(0,c.jsxs)(l.h4,{id:"the-semver_check-field-package-section",children:["The ",(0,c.jsx)(l.code,{children:"semver_check"})," field (",(0,c.jsx)(l.code,{children:"package"})," section)"]}),"\n",(0,c.jsxs)(l.ul,{children:["\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"true"}),", run ",(0,c.jsx)(l.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"})," for this package."]}),"\n",(0,c.jsxs)(l.li,{children:["If ",(0,c.jsx)(l.code,{children:"false"}),", don't."]}),"\n"]}),"\n",(0,c.jsxs)(l.p,{children:["By default, release-plz runs ",(0,c.jsx)(l.a,{href:"https://github.com/obi1kenobi/cargo-semver-checks",children:"cargo-semver-checks"})," if the package is a library."]})]})}function o(e={}){const{wrapper:l}={...(0,n.a)(),...e.components};return l?(0,c.jsx)(l,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}},1151:(e,l,i)=>{i.d(l,{Z:()=>r,a:()=>d});var c=i(7294);const n={},s=c.createContext(n);function d(e){const l=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),c.createElement(s.Provider,{value:l},e.children)}}}]);